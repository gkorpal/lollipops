clear;

D:=975588203;
x:=11124319664666253208143302524520555436458679357888556211263176374763332326972409568607020; //0 mod 12
assert x mod 12 eq 0;
p:=x^2-x+1;
q:=x^2+1;
assert IsPrime(p: Proof:=false);
assert IsPrime(q: Proof:=false);
Fp:=GF(p);
Fq:=GF(q);

////////////////////////////////////////////////////////////
//Construct Ecalhat
////////////////////////////////////////////////////////////
Fq3:=ExtensionField<Fq,x|IrreduciblePolynomial(Fq,3)>;
Ecalhat:=BaseChange(SupersingularEllipticCurve(Fq),Fq3);
assert #Ecalhat eq (q^3+1);
assert (q^3+1) mod p eq 0;

////////////////////////////////////////////////////////////
//Construct Ecal
////////////////////////////////////////////////////////////
Fp2<mu>:=ExtensionField<Fp,x|x^2+2>;
Fp4<nu>:=ExtensionField<Fp2,x|x^2-mu>;
//Broker's algorithm
aCalhat:=(34591883772009265471952427779390316990588697210234305573813559404281192707476657091221778670741596711881913987355676468194403158711683205093166725588945056194266946675167496966*mu + 
        49273535032618435492148390304846298313883205102406333724865266928312672060077982439981636848992628054772148371791121430587606148251120732557432779817131264060140743379448316872)*nu + 
        44375629569590950273337319103244167767601535617662513124888185020805810482271652465922476901778055853715344156192499372508145448377172006437111797975906943240859591074367668348*mu +
        52193953408180097801853016966500783004397220843970068037306314134563145870473463782556365019663446453523244120894202413317904191373051285648376285545376570698036890649249447948;
bCalhat:=(63747889679277654998408904968976449463309000511268149475950445839033775169139735783330679513712548011105365284298330433996264038694444991574973166341690393362246829959652923627*mu + 
        23275426343403608235322133328763271057516194436142914296835878905499050413610738571469170281114247479009079730895487381267211424096059617509271164810390839931330891666813653581)*nu + 
        90563273079575727565565294724043884040012213910035791889541560397790169103273907708964969215250701457434634806618287754176321151048686854821078294665817224834733410075910072371*mu +
        7551093443311166731349904590386047948788892329825370936693222250488559707314883662149751183605328052907896269951480475982644472631372140735049689921888079667237430313835642887;
Ecal:=EllipticCurve([Fp4|aCalhat,bCalhat]);
assert (p^2+1)^2*Random(Ecal) eq Ecal!0;

////////////////////////////////////////////////////////////
//Construct E
////////////////////////////////////////////////////////////

//jq is a root of Hilbert Class Polynomial H_D(X) in Fq[X]
//jq:=23807584437682490848874255592611071730909184125151969774494440150001785649531223581229311283993618746020737841040810982893252391464234380335755296430011783713050549306908662;
//Eq:=QuadraticTwist(EllipticCurveFromjInvariant(Fq!jq));
Aq:=51578952170541100627006549711646505553989726492544350330710295848490414432006957487262600709872626991158982398434005372627994194884784105204405972119562185132213760839880370811;
Bq:=9985885587076677764792752167259181062847933135500144251910258044562915183592792992967648377157289942663614072120158292458365525176343326761879084426389230936995752232434719395;
E:=EllipticCurve([Fq|Aq,Bq]);
h:=1284597120041858964808741114273839931577241051010421214794791810941395387389380999822041512592013390588959397979;
r:=96334084882307579170484479523446531977849376800299152827628262599;
assert IsPrime(r: Proof:=false);
N:=h*r;
assert N*Random(E) eq E!0;
assert Evaluate(CyclotomicPolynomial(6),q) mod r eq 0; 

////////////////////////////////////////////////////////////
//Construct Ebold and Eboldhat: D=-3315
////////////////////////////////////////////////////////////
Fr:=GF(r);
rhat:=96334084882307579170484479523446357895919516279849513983488130569;
assert IsPrime(rhat: Proof:=false);
Frhat:=GF(rhat);

abold:= 32683235885312705665351850751908642368013103624570509972659819578;
bbold:=30967613111682167839780778019629247241823169551158132882308623443;
Ebold:=EllipticCurve([Fr|abold,bbold]);
aboldhat:=78185275578887727788738562627550668661135578021782949469389359562;
bboldhat:= 36297618606839702763491833791791378469567876516133129028197542014;
Eboldhat:=EllipticCurve([Frhat|aboldhat,bboldhat]);

assert r*Random(Eboldhat) eq Eboldhat!0;
assert rhat*Random(Ebold) eq Ebold!0;

////////////////////////////////////////////////////////////
//Construct Ebold_W
////////////////////////////////////////////////////////////
b:=8146;
Ebold_W:=EllipticCurve([Fr|-3,b]);
N_W:=96334084882307579170484479523446743554254094939508984762687773231;
Ebold_Wt:=QuadraticTwist(Ebold_W);
N_Wt:=96334084882307579170484479523446320401444658661089320892568751969;
assert IsPrime(N_W: Proof:=false);
assert IsPrime(N_Wt: Proof:=false);
assert N_W*Random(Ebold_W) eq Ebold_W!0;
assert N_Wt*Random(Ebold_Wt) eq Ebold_Wt!0;

////////////////////////////////////////////////////////////
//Construct Ebold_Ed
////////////////////////////////////////////////////////////
d:=-36607;
AS<X,Y>:=AffineSpace(Fr,2);
Ebold_Ed:=Curve(AS,X^2+Y^2-(1+d*X^2*Y^2));
E_Ed:=EllipticCurve(ProjectiveClosure(Ebold_Ed),Ebold_Ed![0,1]);
r_Ed:=24083521220576894792621119880861739187801578992918123003368969433;
E_Edt:=QuadraticTwist(E_Ed);
r_Edt:=24083521220576894792621119880861526801123109407231453410445161867;
assert IsPrime(r_Ed: Proof:=false);
assert IsPrime(r_Edt: Proof:=false);
N_Ed:=2^2*r_Ed;
N_Edt:=2^3*r_Edt;
assert N_Ed*Random(E_Ed) eq E_Ed!0;
assert N_Edt*Random(E_Edt) eq E_Edt!0;

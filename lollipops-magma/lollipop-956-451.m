clear;

D:=120605958;
x:=589042076226215548287689476330582191609793749744861871604900539741454676076257591997245318667180479210398140701841229910422936321486475345296314; 
assert x mod 12 eq 10;
p:=x^2-x+1;
q:=x^2+1;
assert IsPrime(p: Proof:=false);
assert IsPrime(q: Proof:=false);
Fp:=GF(p);
Fq:=GF(q);

////////////////////////////////////////////////////////////
//Construct Ecalhat
////////////////////////////////////////////////////////////
Fq3:=ExtensionField<Fq,x|IrreduciblePolynomial(Fq,3)>;
Ecalhat:=BaseChange(EllipticCurve([Fq|0,1]),Fq3);
assert #Ecalhat eq (q^3+1);
assert (q^3+1) mod p eq 0;

////////////////////////////////////////////////////////////
//Construct Ecal
////////////////////////////////////////////////////////////
Fp2<mu>:=ExtensionField<Fp,x|x^2+1>;
alpha:=mu+1;
Ecal:=EllipticCurve([Fp2|alpha,0]);
assert #Ecal eq (p^2+1);
assert (p^2+1) mod q eq 0;

////////////////////////////////////////////////////////////
//Construct E
////////////////////////////////////////////////////////////

//jp is a root of Hilbert Class Polynomial H_D(X) in Fp[X]
//jp:=303387350602502852986319421629165475401446262001068991436770909935013222010906086320730338233202393706820747782347708070120052981544555026260645273875871761641623095609954474371957243716959045159421870757163502191854664197932001623376240123586659249642472017777625508275961279215754002605;
//Ep:=QuadraticTwist(EllipticCurveFromjInvariant(Fp!jp));
a:=327109485262376726136172643805932252878964212240064991046803990546570692113955204504295853421320565971168014448160518214189382593729022922934619191479697131508401422054977766988346990626462981083698419529403033388974770759484439350971607246476622466769281101195803851961334206387433757192;
b:=279050255428736347835787201657572365478299307911044416076073175912778177975625581983202449094627882457913470267629624709093466687587530683922179493820089554667794629254883792790600467080376496365458891552310274342079659991659178694655626276630944082371547597372703391340583858884507859049;
E:=EllipticCurve([Fp|a,b]);
h:=76182347360104295691389198837779736649246768246453788622413701157110735036917351906437908803769129014598039561668077363397378012546375286033150471993610;
r:=4554474620279221025376588013428792331658085875800439965576470444142136125074436360422816311318800204172284882642774195680976231192452677;
assert IsPrime(r: Proof:=false);
N:=h*r;
assert N*Random(E) eq E!0;
assert Evaluate(CyclotomicPolynomial(4),p) mod r eq 0; 

\\ Must set maximal stack size as big as possible. 
\\ A safe value is half of the system memory.
\\ This script was tested with parisizemax = 8G.
\\ By default all variables are global.

D=372894729;
x=32154396145754238913904610480940111260824799292693486280615353684230401284; 
if(!(x % 12 == 4), error("assertion failed"));
p=x^2-x+1;
q=x^2+1;
if(!ispseudoprime(p), error("assertion failed")); 
if(!ispseudoprime(q), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecalhat
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
u=ffgen(ffinit(q,3), 'u);
Ecal=ellinit([0,1], u);
if(!(ellcard(Ecal) == (q^3+1)), error("assertion failed")); 
if(!((q^3+1) % p == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecal
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
mu=ffgen('x^2 + Mod(2,p), 'mu);
[root, map]=ffextend(mu, 'x^2-mu, 'nu);
nu=ffgen(root);
bCalhat=(870243541907538636476096312366753908753681606133031934858115999214069387962720619838785825090674830689438488032738259270417678227960818448788974193*root^2 +    913011671916266906313293900013532069304873835348706441969580482172912471474428280645179896737658349004672355079152636511111465312399086247869400167)*root +    (731216686499465503119147927728775510091481363483878578517409859041072137613812275343046672555228493088018845587875826605269905241679305802546075707*root^2 +    533761454853494124179007030361172965655565195549158261755915276106874602517550416312732575152273003763557642252333028062768734566742599627565358601);
aCalhat= (405588634013455014185145439588167864349633871275777356090127835494737556341185951867676388091150617338306681595145959759114369938887928352098356141*root^2 + 351798687612696853331801975697324619003011410979614061984647117185853200926654147403739491092800379299689525363626613106328364788532788430637221880)*root +    (682436908538963715215889057022226319866046819130615170689552006300866431600481742644207230148201145895731682676199925430020483270463248335787410748*root^2 +    464288645004416299297092850760114330880978791888060330992496139092093469256043278255463189754077505057353315079339285595126203550964325274729574375);
ECalhat=ellinit([aCalhat,bCalhat], nu);
if(!(ellmul(ECalhat, random(ECalhat), (p^2+1)^2) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct E
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
a=295366402817990747167057193017267738369013217753563482513857148440682964952557353688015611556562594478711044492190492708738012606935628554932263592;
b=443172385862113560342781278596847148685329269880791170430971807402500493446289560868885032735056319872018885597733528601223183959381934469573920189;
E=ellinit([a,b],p);
h=541267069089752893881108215061552635910379595918837437128308713411365523057712426367130;
r=1910157204347957325700187962477453761504460135807772883063193;
if(!ispseudoprime(r), error("assertion failed")); 
N=h*r;
if(!(ellmul(E,random(E),N) == [0]), error("assertion failed")); 
if(!(polcyclo(4,p)%r == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold and Eboldhat: D=-547
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
rhat=1910157204347957325700187962480217512925138482090399484362397;
if(!ispseudoprime(rhat), error("assertion failed")); 

abold=310430355972238624670346823872987821525752074929457362854270;
bbold=1289296492403480076359494314731478118452955985948858157354653;
Ebold=ellinit([abold,bbold],r);

aboldhat=73275333332267847499581501376863252276520692179021512625126;
bboldhat=1538008641579097707704221968675032141849999412179326013460607;
Eboldhat=ellinit([aboldhat,bboldhat], rhat);

if(!(ellmul(Ebold, random(Ebold), rhat) == [0]), error("assertion failed")); 
if(!(ellmul(Eboldhat, random(Eboldhat), r) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_W
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
b=4438;
Ebold_W=ellinit([-3,b],r);
N_W=1910157204347957325700187962478004568967839998251779068625667;
Ebold_Wt=ellinit(elltwist(Ebold_W));
N_Wt=1910157204347957325700187962476902954041080273363766697500721;
if(!ispseudoprime(N_W), error("assertion failed")); 
if(!ispseudoprime(N_Wt), error("assertion failed")); 
if(!(ellmul(Ebold_W, random(Ebold_W), N_W) == [0]), error("assertion failed")); 
if(!(ellmul(Ebold_Wt, random(Ebold_Wt), N_Wt) == [0]), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_Ed
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
d=96027;
Ebold_Ed=ellfromeqn(-'X^2+'Y^2-(1+d*'X^2*'Y^2));
E_Ed=ellinit(Ebold_Ed, r);
r_Ed=238769650543494665712523495309664950586333074547011512911983;
E_Edt=ellinit(elltwist(E_Ed));
r_Edt=477539301086989331425046990619396979579563918809863415707631;
if(!ispseudoprime(r_Ed), error("assertion failed")); 
if(!ispseudoprime(r_Edt), error("assertion failed")); 
N_Ed=2^3*r_Ed;
N_Edt=2^2*r_Edt;
if(!(ellmul(E_Ed, random(E_Ed), N_Ed) == [0]), error("assertion failed")); 
if(!(ellmul(E_Edt, random(E_Edt), N_Edt) == [0]), error("assertion failed")); 

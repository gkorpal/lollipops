\\ Must set maximal stack size as big as possible. 
\\ A safe value is half of the system memory.
\\ This script was tested with parisizemax = 8G.
\\ By default all variables are global.

D=9926408913;
x=148190916660431138777980177619542306616143137283306557857409776817887468836; 
if(!(x % 12 == 4), error("assertion failed"));
p=x^2-x+1;
q=x^2+1;
if(!ispseudoprime(p), error("assertion failed")); 
if(!ispseudoprime(q), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecalhat
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
u=ffgen(ffinit(q,3), 'u);
Ecal=ellinit([0,1], u);
if(!(ellcard(Ecal) == (q^3+1)), error("assertion failed")); 
if(!((q^3+1) % p == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecal
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
mu=ffgen('x^2 + Mod(2,p), 'mu);
[root, map]=ffextend(mu, 'x^2-mu, 'nu);
nu=ffgen(root);
bCalhat=(6819629514028427793267040143967423422175749735544548344785289113734712734367714225444408149913513416129361228417231544970439115990760128776829013323*root^2 +    11696542290269229889139218494668175824151511331427392033821839509749463618384796538210083287248225183432462123420375406838789945538441006613736876115)*root + (17109942079185499694988069026823827372227401254185159799512966146721103187169677835005960146097380907993677110102436620618114670415022626630150121836*root^2 +    1899585167880123575286568985685088712601213512576163089675608425054736822991386485119752866003272697723228269286052319970267880910615677684044936650);
aCalhat= (11437822048899516940400310964228074373522853975563914373725648225713268249441468164993688028777346412341468449618683360888741616511862275934271264798*root^2 +    10940552937291116473995398065418126257439037321408371952659490309875141936232069006665356408674471845268711149960117650439878147938965122540739483521)*root + (9054919298780011403047359410561301815178026471575101645173392300474531187736374008695539425118715994502468734235592745656773362780404830196721136741*root^2 +    9609396290363650206473974311260150232035723871408445415006740914857127257629200432341071232299294201191165959006140226752566077480398501383357687486);
ECalhat=ellinit([aCalhat,bCalhat], nu);
if(!(ellmul(ECalhat, random(ECalhat), (p^2+1)^2) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct E
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
a=8164144008416138059559770785188066754442553701716711803916134363770793258726030827735516907972348377426030914947524859887683451116796820321866802711;
b=5632259763826571137913753799768927026199186363043755785632880206974379769301018380207441619038062884945546370674119208584841408612389733497250120639;
E=ellinit([a,b],p);
h=48554228302265852378745060671209564494214727064578533680045231475270231902173187306186392362;
r=452289090950994003223021969289412538905109747938600035473;
if(!ispseudoprime(r), error("assertion failed")); 
N=h*r;
if(!(ellmul(E,random(E),N) == [0]), error("assertion failed")); 
if(!(polcyclo(4,p)%r == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold and Eboldhat: D=-57891
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
rhat=452289090950994003223021969295685766658119118522073819343;
if(!ispseudoprime(rhat), error("assertion failed")); 

abold=399001461245321296126381432971242976608116263139057759515;
bbold=172255861048551230726818214921508358899261733497412193138;
Ebold=ellinit([abold,bbold],r);

aboldhat=382592834932524939947477163434187746329563145791551928669;
bboldhat=139392512036938126551089611722996040657111945461043781348;
Eboldhat=ellinit([aboldhat,bboldhat], rhat);

if(!(ellmul(Ebold, random(Ebold), rhat) == [0]), error("assertion failed")); 
if(!(ellmul(Eboldhat, random(Eboldhat), r) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_W
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
b=40288;
Ebold_W=ellinit([-3,b],r);
N_W=452289090950994003223021969312383436325025828677515189019;
Ebold_Wt=ellinit(elltwist(Ebold_W));
N_Wt=452289090950994003223021969266441641485193667199684881929;
if(!ispseudoprime(N_W), error("assertion failed")); 
if(!ispseudoprime(N_Wt), error("assertion failed")); 
if(!(ellmul(Ebold_W, random(Ebold_W), N_W) == [0]), error("assertion failed")); 
if(!(ellmul(Ebold_Wt, random(Ebold_Wt), N_Wt) == [0]), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_Ed
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
d=54091;
Ebold_Ed=ellfromeqn(-'X^2+'Y^2-(1+d*'X^2*'Y^2));
E_Ed=ellinit(Ebold_Ed, r);
r_Ed=56536136368874250402877746160992442700942386491315831217;
E_Edt=ellinit(elltwist(E_Ed));
r_Edt=113072272737748500805755492322721384050670100986668355303;
if(!ispseudoprime(r_Ed), error("assertion failed")); 
if(!ispseudoprime(r_Edt), error("assertion failed")); 
N_Ed=2^3*r_Ed;
N_Edt=2^2*r_Edt;
if(!(ellmul(E_Ed, random(E_Ed), N_Ed) == [0]), error("assertion failed")); 
if(!(ellmul(E_Edt, random(E_Edt), N_Edt) == [0]), error("assertion failed")); 

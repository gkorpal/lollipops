\\ Must set maximal stack size as big as possible. 
\\ A safe value is half of the system memory.
\\ This script was tested with parisizemax = 8G.
\\ By default all variables are global.

D=120605958;
x=589042076226215548287689476330582191609793749744861871604900539741454676076257591997245318667180479210398140701841229910422936321486475345296314; 
if(!(x % 12 == 10), error("assertion failed"));
p=x^2-x+1;
q=x^2+1;
if(!ispseudoprime(p), error("assertion failed")); 
if(!ispseudoprime(q), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecalhat
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
u=ffgen(ffinit(q,3), 'u);
Ecal=ellinit([0,1], u);
if(!(ellcard(Ecal) == (q^3+1)), error("assertion failed")); 
if(!((q^3+1) % p == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecal
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
mu=ffgen('x^2 + Mod(1,p), 'mu);
alpha=mu+1;
ECalhat=ellinit([alpha,0]);
if(!(ellcard(ECalhat) == (p^2+1)), error("assertion failed")); 
if(!((p^2+1) % q == 0), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct E
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
a=327109485262376726136172643805932252878964212240064991046803990546570692113955204504295853421320565971168014448160518214189382593729022922934619191479697131508401422054977766988346990626462981083698419529403033388974770759484439350971607246476622466769281101195803851961334206387433757192;
b=279050255428736347835787201657572365478299307911044416076073175912778177975625581983202449094627882457913470267629624709093466687587530683922179493820089554667794629254883792790600467080376496365458891552310274342079659991659178694655626276630944082371547597372703391340583858884507859049;
E=ellinit([a,b],p);
h=76182347360104295691389198837779736649246768246453788622413701157110735036917351906437908803769129014598039561668077363397378012546375286033150471993610;
r=4554474620279221025376588013428792331658085875800439965576470444142136125074436360422816311318800204172284882642774195680976231192452677;
if(!ispseudoprime(r), error("assertion failed")); 
N=h*r;
if(!(ellmul(E,random(E),N) == [0]), error("assertion failed")); 
if(!(polcyclo(4,p)%r == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold and Eboldhat: D=-56731
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
rhat=4554474620279221025376588013428792331658085875800439965576470444142127975354138524998341010887945287609636101034245310800998935953876811;
if(!ispseudoprime(rhat), error("assertion failed")); 

abold=690575014239454026638313273329796547820393408742460126354768053643684518773934884666730883558156028900268187865564024445057072912921515;
bbold=2931206434669286082400888631663293346675485377851507931593738296428532456121222430361182020448147882192902114775558386761455466572805157;
Ebold=ellinit([abold,bbold],r);

aboldhat=1972836130617312264884522886607377588737124874558355128915486743894639213792715792469391602871306903957933707088190344635368569493105706;
bboldhat=667467996430158755384029725741044737402793847049612710548493018355905138502964590739405943223201736357580147915836335807698999577229546;
Eboldhat=ellinit([aboldhat,bboldhat], rhat);

if(!(ellmul(Ebold, random(Ebold), rhat) == [0]), error("assertion failed")); 
if(!(ellmul(Eboldhat, random(Eboldhat), r) == [0]), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_W
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
b=146441;
Ebold_W=ellinit([-3,b],r);
N_W=4554474620279221025376588013428792331658085875800439965576470444142137012790331503296048511068375852301852166502782404804129551442423273;
Ebold_Wt=ellinit(elltwist(Ebold_W));
N_Wt=4554474620279221025376588013428792331658085875800439965576470444142135237358541217549584111569224556042717598782765986557822910942482083;
if(!ispseudoprime(N_W), error("assertion failed")); 
if(!ispseudoprime(N_Wt), error("assertion failed")); 
if(!(ellmul(Ebold_W, random(Ebold_W), N_W) == [0]), error("assertion failed")); 
if(!(ellmul(Ebold_Wt, random(Ebold_Wt), N_Wt) == [0]), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_Ed
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
d=104359;
Ebold_Ed=ellfromeqn(-'X^2+'Y^2-(1+d*'X^2*'Y^2));
E_Ed=ellinit(Ebold_Ed, r);
r_Ed=569309327534902628172073501678599041457260734475054995697058805517765479097142202181635379290879602240595939629855820268382212105985899;
E_Edt=ellinit(elltwist(E_Ed));
r_Edt=1138618655069805256344147003357198082914521468950109991394117611035537104342933775848137397077640897604950562061675457303723691384254541;
if(!ispseudoprime(r_Ed), error("assertion failed")); 
if(!ispseudoprime(r_Edt), error("assertion failed")); 
N_Ed=2^3*r_Ed;
N_Edt=2^2*r_Edt;
if(!(ellmul(E_Ed, random(E_Ed), N_Ed) == [0]), error("assertion failed")); 
if(!(ellmul(E_Edt, random(E_Edt), N_Edt) == [0]), error("assertion failed")); 

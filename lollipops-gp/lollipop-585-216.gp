\\ Must set maximal stack size as big as possible. 
\\ A safe value is half of the system memory.
\\ This script was tested with parisizemax = 8G.
\\ By default all variables are global.

D=8780293827;
x=11124319664666253208143302524520555436458679357888556211263176374763332326972409568607020; 
if(!(x % 12 == 0), error("assertion failed"));
p=x^2-x+1;
q=x^2+1;
if(!ispseudoprime(p), error("assertion failed")); 
if(!ispseudoprime(q), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecalhat
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
u=ffgen(ffinit(q,3), 'u);
au= 14915590223707226709040741780123804541428043639984292216503974549453709833672590731743168154700657648104863936831543348250087067801831340747540231988598876656999000276490213449;
bu=93919307554265846807465660183963347742515864385391369285437773425148301612828608437582059504932053823359343956151615868970301143133652334926272637718248928861532735750212853503;
Ecal=ellinit([Mod(au,q),Mod(bu,q)], u);
\\if(!(ellcard(Ecal) == (q^3+1)), error("assertion failed")); 
if(!(ellmul(Ecal, random(Ecal), q^3+1) == [0]), error("assertion failed")); 
if(!((q^3+1) % p == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ecal
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
mu=ffgen('x^2 + Mod(2,p), 'mu);
[root, map]=ffextend(mu, 'x^2-mu, 'nu);
nu=ffgen(root);
aCalhat=(34591883772009265471952427779390316990588697210234305573813559404281192707476657091221778670741596711881913987355676468194403158711683205093166725588945056194266946675167496966*root^2 +        49273535032618435492148390304846298313883205102406333724865266928312672060077982439981636848992628054772148371791121430587606148251120732557432779817131264060140743379448316872)*root +        44375629569590950273337319103244167767601535617662513124888185020805810482271652465922476901778055853715344156192499372508145448377172006437111797975906943240859591074367668348*root^2 +        52193953408180097801853016966500783004397220843970068037306314134563145870473463782556365019663446453523244120894202413317904191373051285648376285545376570698036890649249447948;
bCalhat=(63747889679277654998408904968976449463309000511268149475950445839033775169139735783330679513712548011105365284298330433996264038694444991574973166341690393362246829959652923627*root^2 +         23275426343403608235322133328763271057516194436142914296835878905499050413610738571469170281114247479009079730895487381267211424096059617509271164810390839931330891666813653581)*root +         90563273079575727565565294724043884040012213910035791889541560397790169103273907708964969215250701457434634806618287754176321151048686854821078294665817224834733410075910072371*root^2 +        7551093443311166731349904590386047948788892329825370936693222250488559707314883662149751183605328052907896269951480475982644472631372140735049689921888079667237430313835642887;
ECalhat=ellinit([aCalhat,bCalhat], nu);
if(!(ellmul(ECalhat, random(ECalhat), (p^2+1)^2) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct E
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
a=51578952170541100627006549711646505553989726492544350330710295848490414432006957487262600709872626991158982398434005372627994194884784105204405972119562185132213760839880370811;
b=9985885587076677764792752167259181062847933135500144251910258044562915183592792992967648377157289942663614072120158292458365525176343326761879084426389230936995752232434719395;
E=ellinit([a,b],q);
h=1284597120041858964808741114273839931577241051010421214794791810941395387389380999822041512592013390588959397979;
r=96334084882307579170484479523446531977849376800299152827628262599;
if(!ispseudoprime(r), error("assertion failed")); 
N=h*r;
if(!(ellmul(E,random(E),N) == [0]), error("assertion failed")); 
if(!(polcyclo(6,q)%r == 0), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold and Eboldhat: D=-3315
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
rhat=96334084882307579170484479523446357895919516279849513983488130569;
if(!ispseudoprime(rhat), error("assertion failed")); 

abold=32683235885312705665351850751908642368013103624570509972659819578;
bbold=30967613111682167839780778019629247241823169551158132882308623443;
Ebold=ellinit([abold,bbold],r);

aboldhat=78185275578887727788738562627550668661135578021782949469389359562;
bboldhat=36297618606839702763491833791791378469567876516133129028197542014;
Eboldhat=ellinit([aboldhat,bboldhat], rhat);

if(!(ellmul(Ebold, random(Ebold), rhat) == [0]), error("assertion failed")); 
if(!(ellmul(Eboldhat, random(Eboldhat), r) == [0]), error("assertion failed")); 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_W
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
b=8146;
Ebold_W=ellinit([-3,b],r);
N_W=96334084882307579170484479523446743554254094939508984762687773231;
Ebold_Wt=ellinit(elltwist(Ebold_W));
N_Wt=96334084882307579170484479523446320401444658661089320892568751969;
if(!ispseudoprime(N_W), error("assertion failed")); 
if(!ispseudoprime(N_Wt), error("assertion failed")); 
if(!(ellmul(Ebold_W, random(Ebold_W), N_W) == [0]), error("assertion failed")); 
if(!(ellmul(Ebold_Wt, random(Ebold_Wt), N_Wt) == [0]), error("assertion failed")); 

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\Construct Ebold_Ed
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
d=-36607;
Ebold_Ed=ellfromeqn('X^2+'Y^2-(1+d*'X^2*'Y^2));
E_Ed=ellinit(Ebold_Ed, r);
r_Ed=24083521220576894792621119880861739187801578992918123003368969433;
E_Edt=ellinit(elltwist(E_Ed));
r_Edt=24083521220576894792621119880861526801123109407231453410445161867;
if(!ispseudoprime(r_Ed), error("assertion failed")); 
if(!ispseudoprime(r_Edt), error("assertion failed")); 
N_Ed=2^2*r_Ed;
N_Edt=2^3*r_Edt;
if(!(ellmul(E_Ed, random(E_Ed), N_Ed) == [0]), error("assertion failed")); 
if(!(ellmul(E_Edt, random(E_Edt), N_Edt) == [0]), error("assertion failed")); 
